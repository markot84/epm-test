/*
 * Copyright 2020, GeoSolutions Sas.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

@use 'sass:map';

@import 'variables',

'bootstrap-variables',
'~bootstrap-v4/scss/bootstrap',

'mixins',

'brand-navbar',
'card-grid',
'details-panel',
'filter-by-extent',
'filter-form',
'filter-menu',
'filter-links',
'footer',
'hero',
'loader',
'main-loader',
'menu-index',
'resource-card',
'search-bar',
'swipe-menu',
'home-container',
'tag';


@import '~react-select/dist/react-select.css';
@import '~@fortawesome/fontawesome-free/css/all.min.css';
@import '~ol/ol.css';

:root {
    font-size: 16px;
}

@each $theme, $theme-vars in $gn-themes {
    .gn-theme-#{$theme} {
        @include color-var(map.get($theme-vars, 'body-color'), --gn-body-color);
        @include background-color-var(map.get($theme-vars, 'body-bg'), --gn-body-bg);

        .btn:focus,
        .btn.focus {
            @include box-shadow-var(map.get($theme-vars, 'focus-color'), --gn-focus-color);
            @include outline-color-var(map.get($theme-vars, 'focus-color'), --gn-focus-color);
        }

        .gn-brand-navbar,
        .gn-details-panel,
        .gn-details-panel > *,
        .gn-footer,
        .gn-resource-card,
        .gn-filter-form,
        .gn-hero .gn-search-bar,
        .gn-card-options,
        .gn-search-bar,
        input,
        input:focus,
        .gn-suggestions,
        .dropdown-menu {
            @include color-var(map.get($theme-vars, 'body-color'), --gn-body-color);
            @include background-color-var(map.get($theme-vars, 'body-bg'), --gn-body-bg);
        }

        .gn-main-home,
        .gn-card-grid,
        .gn-filters-menu {
            @include color-var(map.get($theme-vars, 'body-shade-color'), --gn-body-shade-color);
            @include background-color-var(map.get($theme-vars, 'body-shade-bg'), --gn-body-shade-bg);
        }

        .btn-default {
            color: inherit;
            @include hover() {
                color: inherit;
                opacity: 0.8;
            }
            &.active {
                @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
                @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
            }
            .badge {
                @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
                @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
            }
        }
        // default badge color
        .badge {
            @include color-var(map.get($theme-vars, 'badge-color'), --gn-badge-color);
            @include background-color-var(map.get($theme-vars, 'badge-bg'), --gn-badge-bg);
        }

        .gn-menu-index {
            @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
            @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
            .badge {
                @include color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
                @include background-color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
            }
            .dropdown-menu .badge {
                @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
                @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
            }
        }
        .gn-menu-index-divider {
            @include background-color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
        }
        .gn-filter-form-divider {
            @include background-color-var(map.get($theme-vars, 'body-shade-bg'), --gn-shade-bg);
        }
        .gn-filter-by-extent-map,
        .gn-details-panel-preview,
        .gn-details-panel-preview-loader,
        .gn-resource-card .card-img-top,
        .gn-loader-placeholder {
            @include color-var(map.get($theme-vars, 'image-color'), --gn-image-color);
            @include background-color-var(map.get($theme-vars, 'image-bg'), --gn-image-bg);
        }

        .gn-hero {
            @include color-var(map.get($theme-vars, 'jumbotron-color'), --gn-image-color);
            @include background-color-var(map.get($theme-vars, 'jumbotron-bg'), --gn-image-bg);
        }

        a {
            @include color-var(map.get($theme-vars, 'link-color'), --gn-link-color);
            text-decoration: none;

            @include hover() {
                @include color-var(map.get($theme-vars, 'link-hover-color'), --gn-link-hover-color);
                text-decoration: none;
            }
        }

        .custom-control-input:checked~.custom-control-label::before {
            @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
            @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
            @include border-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
        }

        .custom-switch .custom-control-input:checked~.custom-control-label::after {
            @include background-color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
        }

        .gn-menu-index .gn-tag,
        .gn-menu-index .btn-default {
            @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
            @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
            border: none;

            &.active {
                @include color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
                @include background-color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
            }

            @include hover() {
                @include color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
                @include background-color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
                opacity: 1;
                .badge {
                    @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
                    @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
                }
            }
        }

        

        .gn-details-panel.loading .gn-details-panel-content {
            h1, a, p {
                color: transparent;
                @include background-color-var(map.get($theme-vars, 'placeholder-bg'), --gn-placeholder-bg);
            }
        }

        .gn-loader-placeholder .fa {
            @include color-var(map.get($theme-vars, 'body-bg'), --gn-body-bg);
        }

        .gn-resource-card {
            .card-title a {
                @include color-var(map.get($theme-vars, 'body-color'), --gn-body-color);

                @include hover() {
                    text-decoration: underline;
                }
            }

            .gn-tag {
                @include color-var(map.get($theme-vars, 'body-color'), --gn-body-color);
                font-size: inherit;

                @include hover() {
                    color: inherit;
                    background-color: transparent;
                }
            }

            &.active {
                @include border-color-var(map.get($theme-vars, 'focus-color'), --gn-focus-color);
                @include outline-color-var(map.get($theme-vars, 'focus-color'), --gn-focus-color);
            }

            @include hover() {
                @include border-color-var(map.get($theme-vars, 'focus-color'), --gn-focus-color);
            }
        }

        .gn-filter-link {
            a {
                @include color-var(map.get($theme-vars, 'body-color'), --gn-body-color);

                @include hover() {
                    text-decoration: underline;
                }
            }
        }

        .gn-search-bar {
            @include border-color-var(map.get($theme-vars, 'body-border-color'), --gn-body-border-color);

            &.focus {
                @include outline-color-var(map.get($theme-vars, 'focus-color'), --gn-focus-color);
            }
        }

        .gn-tag {
            @include color-var(map.get($theme-vars, 'tag-color'), --gn-tag-color);
            background-color: transparent;
            &.active {
                @include color-var(map.get($theme-vars, 'tag-active-color'), --gn-tag-active-color);
                @include background-color-var(map.get($theme-vars, 'tag-active-bg'), --gn-tag-active-bg);
            }
            @include hover() {
                @include color-var(map.get($theme-vars, 'tag-hover-color'), --gn-tag-active-color);
                @include background-color-var(map.get($theme-vars, 'tag-hover-bg'), --gn-tag-active-bg);
            }
        }

        .gn-footer {
            @include color-var(map.get($theme-vars, 'footer-color'), --gn-footer-color);
            @include background-color-var(map.get($theme-vars, 'footer-bg'), --gn-footer-bg);
            a {
                @include color-var(map.get($theme-vars, 'footer-link-color'), --gn-footer-link-color);
                text-decoration: none;

                @include hover() {
                    @include color-var(map.get($theme-vars, 'footer-link-hover-color'), --gn-footer-link-hover-color);
                    text-decoration: none;
                }
            }
        }

        .dropdown-item {
            @include hover-focus() {
                @include background-color-var(map.get($theme-vars, 'body-shade-bg'), --gn-body-shade-bg);
                text-decoration: none;
            }

            &.active,
            &:active {
                @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
                @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
                @include hover-focus() {
                    @include color-var(map.get($theme-vars, 'primary-color'), --gn-primary-color);
                    @include background-color-var(map.get($theme-vars, 'primary-bg'), --gn-primary-bg);
                }
            }
        }

        .list-group-item-action {
            @include color-var(map.get($theme-vars, 'body-color'), --gn-body-color);
            @include background-color-var(map.get($theme-vars, 'body-bg'), --gn-body-bg);
            @include hover-focus() {
                @include color-var(map.get($theme-vars, 'body-shade-color'), --gn-body-shade-color);
                @include background-color-var(map.get($theme-vars, 'body-shade-bg'), --gn-body-shade-bg);
            }
            &:active {
                @include color-var(map.get($theme-vars, 'body-shade-color'), --gn-body-shade-color);
                @include background-color-var(map.get($theme-vars, 'body-shade-bg'), --gn-body-shade-bg);
            }
        }

        .list-group-item {
            @include color-var(map.get($theme-vars, 'body-color'), --gn-body-color);
            @include background-color-var(map.get($theme-vars, 'body-bg'), --gn-body-bg);
            @include border-color-var(map.get($theme-vars, 'body-border-color'), --gn-body-border-color);

            &.active {
                @include color-var(map.get($theme-vars, 'body-shade-color'), --gn-body-shade-color);
                @include background-color-var(map.get($theme-vars, 'body-shade-bg'), --gn-body-shade-bg);
                @include border-color-var(map.get($theme-vars, 'body-border-color'), --gn-body-border-color);
            }
        }
        @include react-select-theme($theme-vars);
    }
}
